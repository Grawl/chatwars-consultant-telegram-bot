import log from '../lib/log'
import fs from 'fs'
import data from './../lib/data'
const staticData = JSON.parse(fs.readFileSync('./lib/data.json', 'utf8'))
import speaker from './../lib/speaker'
const phrases = data.phrases
const gameStrings = data.gameStrings
export default (bot, message) => {
	const say = (input) => speaker(bot, message, input)
	const items = message.text.split('\n\n').slice(1).map(item => {
		const match = item.match(data.storeSellItemsRegex)
		return {
			name: match[1],
			storeSell: match[2],
			cost: match[2] * (10/3),
			id: match[3],
			input: match.input
		}
	})
	const store = staticData.store
	let storeItems = []
	store.forEach(obj => {
		Object.values(obj).forEach(type => {
			type.forEach(item => {
				storeItems.push(item)
			})
		})
	})
	let newItems = []
	items.forEach(item => {
		if (!storeItems.some(storeItem => storeItem.name === item.name)) {
			newItems.push(item)
		}
	})
	if (newItems.length > 0) {
		let phrase = `–ë–ª–∞–≥–æ–¥–∞—Ä—é –∑–∞ —Å–æ–¥–µ–π—Å—Ç–≤–∏–µ! –≠—Ç–∏ –ø—Ä–µ–¥–º–µ—Ç—ã –µ—â—ë —É –º–µ–Ω—è –Ω–µ –∑–∞–ø–∏—Å–∞–Ω—ã:\n`
		newItems.forEach(item => {
			phrase += `\n${item.name} üí∞${item.storeSell} (${item.cost})`
		})
		phrase += `\n\n–í —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ –æ–Ω–∏ –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –º–æ–∏ –∑–∞–ø–∏—Å–∏ –∏ —è —Å–º–æ–≥—É –∏—Ö —É—á–∏—Ç—ã–≤–∞—Ç—å –≤ –æ–±—â–µ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Ç–≤–æ–∏—Ö –≤–µ—â–µ–π.`
		log.info('>>> new items: ', newItems)
		say(phrase)
	}
	else {
		say('–ë–ª–∞–≥–æ–¥–∞—Ä—é –∑–∞ —Å–æ–¥–µ–π—Å—Ç–≤–∏–µ, –Ω–æ –≤—Å–µ —ç—Ç–∏ –ø—Ä–µ–º–µ—Ç—ã –º–Ω–µ —É–∂–µ –∏–∑–≤–µ—Å—Ç–Ω—ã.')
	}
}